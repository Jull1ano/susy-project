// Requirements
// ============
@import "susy";
@import "breakpoint";
@import "compass";
@import "sassy-buttons";

$susy: (
        flow: ltr,
        math: fluid,
        output: float,
        gutter-position: after,
        container: auto,
        container-position: center,
        columns: 12,
        gutters: .25,
        column-width: false,
        global-box-sizing: content-box,
        last-flow: to,
        debug: (
                image: hide,
                color: rgba(#66f, .25),
                output: background,
                toggle: top right,
        ),
        use-custom: (
                background-image: true,
                background-options: false,
                box-sizing: true,
                clearfix: false,
                rem: true,
        )
);

html {
        font-size: 62.5%; /* 1 */
}

@function parseInt($n) { /* 2 */
        @return $n / ($n * 0 + 1);
}

@mixin rex($property, $values) {
        $px : (); /* 3 */
        $rem: (); /* 3 */

        @each $value in $values { /* 4 */

                @if $value == 0 or $value == auto { /* 5 */
                        $px : append($px , $value);
                        $rem: append($rem, $value);
                }

                @else {
                        $unit: unit($value);    /* 6 */
                        $val: parseInt($value); /* 6 */

                        @if $unit == "px" {  /* 7 */
                                $px : append($px,  $value);
                                $rem: append($rem, ($val / 10 + rem));
                        }

                        @if $unit == "rem" { /* 7 */
                                $px : append($px,  ($val * 10 + px));
                                $rem: append($rem, $value);
                        }
                }
        }

        @if $px == $rem {     /* 8 */
                #{$property}: $px;  /* 9 */
        } @else {
                #{$property}: $px;  /* 9 */
                #{$property}: $rem; /* 9 */
        }
}